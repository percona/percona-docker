FROM redhat/ubi8-minimal

# Please don't remove old-style LABEL since it's needed for RedHat certification
LABEL name="Percona Server for MongoDB" \
	release="3.6" \
	vendor="Percona" \
	summary="Percona Server for MongoDB is our free and open-source drop-in replacement for MongoDB Community Edition" \
	description="Percona Server for MongoDB is our free and open-source drop-in replacement for MongoDB Community Edition. It offers all the features and benefits of MongoDB Community Edition, plus additional enterprise-grade functionality." \
	maintainer="Percona Development <info@percona.com>"
LABEL org.label-schema.license="SSPLv1"

LABEL org.opencontainers.image.title="Percona Server for MongoDB"
LABEL org.opencontainers.image.vendor="Percona"
LABEL org.opencontainers.image.description="Percona Server for MongoDB is our free and \
open-source drop-in replacement for MongoDB Community Edition. \
It offers all the features and benefits of MongoDB Community Edition, \
plus additional enterprise-grade functionality."
LABEL org.opencontainers.image.license="SSPLv1"
LABEL org.opencontainers.image.authors="info@percona.com"

ENV PSMDB_VERSION 3.6.23-13.0
ENV OS_VER el8
ENV FULL_PERCONA_VERSION "$PSMDB_VERSION.$OS_VER"
ENV K8S_TOOLS_VERSION 0.5.0
LABEL org.label-schema.schema-version=${PSMDB_VERSION}
LABEL org.opencontainers.image.version=${PSMDB_VERSION}

# check repository package signature in secure way
RUN set -ex; \
    export GNUPGHOME="$(mktemp -d)"; \
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1; \
    gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; \
    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \
    gpg --batch --export --armor 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 > ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \
    rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \
    microdnf install -y findutils; \
    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \
    rpmkeys --checksig /tmp/percona-release.rpm; \
    rpm -i /tmp/percona-release.rpm; \
    rm -rf "$GNUPGHOME" /tmp/percona-release.rpm; \
    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

RUN set -ex; \
    curl -Lf -o /tmp/jq.rpm http://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/jq-1.5-12.el8.x86_64.rpm; \
    curl -Lf -o /tmp/oniguruma.rpm http://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/oniguruma-6.8.2-2.el8.x86_64.rpm; \
    rpmkeys --checksig /tmp/jq.rpm /tmp/oniguruma.rpm; \
    rpm -i /tmp/jq.rpm /tmp/oniguruma.rpm; \
    rm -rf /tmp/jq.rpm /tmp/oniguruma.rpm

RUN set -ex; \
    microdnf install -y \
        shadow-utils \
        curl \
        Percona-Server-MongoDB-36-shell-${FULL_PERCONA_VERSION} \
        Percona-Server-MongoDB-36-mongos-${FULL_PERCONA_VERSION}; \
    \
    curl -Lf -o /tmp/policycoreutils.rpm http://mirror.centos.org/centos/8/BaseOS/x86_64/os/Packages/policycoreutils-2.9-9.el8.x86_64.rpm; \
    curl -Lf -o /tmp/elfutils-libs.rpm http://mirror.centos.org/centos/8/BaseOS/x86_64/os/Packages/elfutils-libs-0.180-1.el8.x86_64.rpm; \
    curl -Lf -o /tmp/procps-ng.rpm http://mirror.centos.org/centos/8/BaseOS/x86_64/os/Packages/procps-ng-3.3.15-3.el8.x86_64.rpm; \
    curl -Lf -o /tmp/Percona-Server-MongoDB-36-server.rpm https://repo.percona.com/yum/release/8/RPMS/x86_64/Percona-Server-MongoDB-36-server-${FULL_PERCONA_VERSION}.x86_64.rpm; \
    rpmkeys --checksig /tmp/policycoreutils.rpm /tmp/elfutils-libs.rpm /tmp/procps-ng.rpm /tmp/Percona-Server-MongoDB-36-server.rpm; \
    rpm -iv /tmp/policycoreutils.rpm /tmp/elfutils-libs.rpm /tmp/procps-ng.rpm /tmp/Percona-Server-MongoDB-36-server.rpm --nodeps; \
    rm -rf  /tmp/policycoreutils.rpm /tmp/elfutils-libs.rpm /tmp/procps-ng.rpm /tmp/Percona-Server-MongoDB-36-server.rpm; \
    microdnf clean all; \
    rm -rf /var/cache/dnf /var/cache/yum /data/db && mkdir -p /data/db; \
    chown -R 1001:0 /data/db

# the numeric UID is needed for OpenShift
RUN useradd -u 1001 -r -g 0 -s /sbin/nologin \
            -c "Default Application User" mongodb

COPY LICENSE /licenses/LICENSE.Dockerfile
RUN cp /usr/share/doc/Percona-Server-MongoDB-36-server/LICENSE-Community.txt /licenses/LICENSE.Percona-Server-for-MongoDB

RUN set -ex; \
    curl -fSL https://github.com/percona/mongodb-orchestration-tools/releases/download/${K8S_TOOLS_VERSION}/k8s-mongodb-initiator -o /usr/local/bin/k8s-mongodb-initiator; \
    curl -fSL  https://github.com/percona/mongodb-orchestration-tools/releases/download/${K8S_TOOLS_VERSION}/mongodb-healthcheck -o /usr/local/bin/mongodb-healthcheck; \
    curl -fSL  https://github.com/percona/mongodb-orchestration-tools/releases/download/${K8S_TOOLS_VERSION}/SHA256SUMS -o /tmp/SHA256SUMS; \
    echo "$(grep 'k8s-mongodb-initiator' /tmp/SHA256SUMS | awk '{print $1}')" /usr/local/bin/k8s-mongodb-initiator | sha256sum -c -; \
    echo "$(grep 'mongodb-healthcheck' /tmp/SHA256SUMS   | awk '{print $1}')" /usr/local/bin/mongodb-healthcheck   | sha256sum -c -; \
    rm -f /tmp/SHA256SUMS; \
    \
    chmod 0755 /usr/local/bin/k8s-mongodb-initiator /usr/local/bin/mongodb-healthcheck

VOLUME ["/data/db"]

COPY ps-entry.sh /entrypoint.sh

ARG DEBUG
RUN if [[ -n $DEBUG ]] ; then \
        set -ex; \
        sed -i 's/exec "$@"/exec "$@" -vvv || sleep infinity/' /entrypoint.sh; \
		curl -Lf -o /tmp/telnet.rpm http://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/telnet-0.17-73.el8_1.1.x86_64.rpm; \
		rpm -i /tmp/telnet.rpm; \
		rm -f /tmp/telnet.rpm; \

        microdnf install -y \
		    net-tools \
		    sudo \
		    gdb \
		    nc \
		    Percona-Server-MongoDB-36-server-debuginfo-${FULL_PERCONA_VERSION} \
		    Percona-Server-MongoDB-36-shell-debuginfo-${FULL_PERCONA_VERSION} \
		    Percona-Server-MongoDB-36-tools-debuginfo-${FULL_PERCONA_VERSION} \
		    Percona-Server-MongoDB-36-mongos-debuginfo-${FULL_PERCONA_VERSION} \
		    Percona-Server-MongoDB-36-tools-${FULL_PERCONA_VERSION} \
		    Percona-Server-MongoDB-36-debugsource-${FULL_PERCONA_VERSION}; \
        microdnf clean all; \
        rm -rf /var/cache/dnf /var/cache/yum; \
    fi

ENTRYPOINT ["/entrypoint.sh"]

EXPOSE 27017

USER 1001

CMD ["mongod"]
